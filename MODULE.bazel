"""
Module file for Zig text embeddings inference Bazel workspace.
"""
module(
    name = "zig_text_embeddings_inference",
    version = "0.0.0",
)

bazel_dep(name = "rules_zig", version = "20250314.0-b9739c6")  # Should match ZML rules_zig version and not the one from bcr
bazel_dep(name = "zml", version = "0.0.0")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.14.0")

# Configure Zig toolchain
zig = use_extension("@rules_zig//zig:extensions.bzl", "zig")
zig.toolchain(zig_version = "0.14.0")

# Use ZML repository for the zml bazel_dep
git_override(
    module_name = "zml",
    remote = "https://github.com/zml/zml.git",
    commit = "8ec91a0edf612a61369c71782cc6e31187149d27",  # master branch @ 27/03/2025
)

# ZAP does not provide bazel integration (no MODULE.bazel / BUILD.bazel),
# so we fetch and configure it using our external_deps extension in third_party
external_deps = use_extension("//:third_party/external_deps.bzl", "external_deps")
use_repo(external_deps, "com_github_zigzap_zap", "com_github_hejsil_clap")

# Huggingface extension
huggingface = use_extension("@zml//bazel:huggingface.bzl", "huggingface")
huggingface.model(
    name = "nomic-ai-modernbert-embed-base",
    build_file_content = """\
package(default_visibility = ["//visibility:public"])
filegroup(
    name = "model",
    srcs = ["model.safetensors"],
)

filegroup(
    name = "tokenizer",
    srcs = ["tokenizer.json"],
)

filegroup(
    name = "config",
    srcs = ["config.json"],
)
""",
    commit = "d556a88e332558790b210f7bdbe87da2fa94a8d8",
    includes = [
        "model.safetensors",
        "tokenizer.json",
        "config.json",
    ],
    model = "nomic-ai/modernbert-embed-base",
)
use_repo(huggingface, "nomic-ai-modernbert-embed-base")
